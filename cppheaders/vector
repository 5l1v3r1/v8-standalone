#ifndef __V8SA_VECTOR_HPP__
#define __V8SA_VECTOR_HPP__

#include <memory>

namespace std {

template <class T, class Alloc = allocator<T> >
class vector {
public:
  typedef T value_type;
  typedef Alloc allocator_type;
  typedef value_type & reference;
  typedef const value_type & const_reference;
  typedef value_type * iterator;
  typedef const value_type * const_iterator;
  
  iterator begin();
  const_iterator begin() const;
  iterator end();
  const_iterator end() const;
  
  void push_back(const value_type & val);
};

}

#endif
